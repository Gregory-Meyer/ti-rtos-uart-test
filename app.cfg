var Defaults = xdc.useModule('xdc.runtime.Defaults');
var Diags = xdc.useModule('xdc.runtime.Diags');
var Error = xdc.useModule('xdc.runtime.Error');
var Log = xdc.useModule('xdc.runtime.Log');
var LoggerBuf = xdc.useModule('xdc.runtime.LoggerBuf');
var Main = xdc.useModule('xdc.runtime.Main');
var Memory = xdc.useModule('xdc.runtime.Memory')
var System = xdc.useModule('xdc.runtime.System');
var Text = xdc.useModule('xdc.runtime.Text');

var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Clock = xdc.useModule('ti.sysbios.knl.Clock');
var Swi = xdc.useModule('ti.sysbios.knl.Swi');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');

var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');
var Log = xdc.useModule('xdc.runtime.Log');
var CpIntc = xdc.useModule('ti.sysbios.family.c66.tci66xx.CpIntc');
var ECM = xdc.useModule('ti.sysbios.family.c64p.EventCombiner');
var core = xdc.useModule('ti.sysbios.hal.Core');
var Cache = xdc.useModule('ti.sysbios.hal.Cache');
var ti_sysbios_family_c66_Cache = xdc.useModule('ti.sysbios.family.c66.Cache');
var ti_sysbios_family_c64p_Hwi = xdc.useModule('ti.sysbios.family.c64p.Hwi');
var MemoryProtect = xdc.useModule('ti.sysbios.family.c64p.MemoryProtect');

/*
 * Uncomment this line to globally disable Asserts.
 * All modules inherit the default from the 'Defaults' module.  You
 * can override these defaults on a per-module basis using Module.common$. 
 * Disabling Asserts will save code space and improve runtime performance.
Defaults.common$.diags_ASSERT = Diags.ALWAYS_OFF;
 */

/*
 * Uncomment this line to keep module names from being loaded on the target.
 * The module name strings are placed in the .const section. Setting this
 * parameter to false will save space in the .const section.  Error and
 * Assert messages will contain an "unknown module" prefix instead
 * of the actual module name.
Defaults.common$.namedModule = false;
 */

/*
 * Minimize exit handler array in System.  The System module includes
 * an array of functions that are registered with System_atexit() to be
 * called by System_exit().
 */
System.maxAtexitHandlers = 4;       

/* 
 * Uncomment this line to disable the Error print function.  
 * We lose error information when this is disabled since the errors are
 * not printed.  Disabling the raiseHook will save some code space if
 * your app is not using System_printf() since the Error_print() function
 * calls System_printf().
Error.raiseHook = null;
 */

/* 
 * Uncomment this line to keep Error, Assert, and Log strings from being
 * loaded on the target.  These strings are placed in the .const section.
 * Setting this parameter to false will save space in the .const section.
 * Error, Assert and Log message will print raw ids and args instead of
 * a formatted message.
Text.isLoaded = false;
 */

/*
 * Uncomment this line to disable the output of characters by SysMin
 * when the program exits.  SysMin writes characters to a circular buffer.
 * This buffer can be viewed using the SysMin Output view in ROV.
SysMin.flushAtExit = false;
 */
 
BIOS.heapSize = 65536;

/*
 * Build a custom SYS/BIOS library from sources.
 */
BIOS.libType = BIOS.LibType_Debug;

/* System stack size (used by ISRs and Swis) */
Program.stack = 0x2000;

/* 
 * Create and install logger for the whole system
 */
var loggerBufParams = new LoggerBuf.Params();
loggerBufParams.numEntries = 16;
var logger0 = LoggerBuf.create(loggerBufParams);
Defaults.common$.logger = logger0;
Main.common$.diags_INFO = Diags.ALWAYS_ON;

var Platform = xdc.useModule('ti.platforms.evmTCI6630K2L.Platform');
var boardSettings = xdc.useModule('ti.board.Settings');
boardSettings.boardName = "evmK2L";

var Osal = xdc.useModule('ti.osal.Settings');
Osal.osType = "tirtos";
Osal.socType = "k2l";

var Csl = xdc.loadPackage('ti.csl');
Csl.Settings.deviceType = "k2l";

var Uart = xdc.loadPackage('ti.drv.uart');
Uart.Settings.socType = "k2l";

var Board = xdc.loadPackage('ti.board');
Board.Settings.boardName = "evmK2L";

var Csl = xdc.useModule('ti.csl.Settings');
Csl.deviceType = "k2l";

var Event = xdc.useModule('ti.sysbios.knl.Event');
Memory.defaultHeapSize = 65536;
BIOS.heapSection = ".heap";
BIOS.customCCOpts = "-mv6600 --abi=eabi -q -mi10 -mo -pdr -pden -pds=238 -pds=880 -pds1110  --program_level_compile -g";
Program.heap = 65536;

Program.sectMap[".heap"] = new Program.SectionSpec();
Program.sectMap[".heap"].loadSegment = "L2SRAM";

System.SupportProxy = xdc.module("xdc.runtime.SysMin");